"""
This type stub file was generated by pyright.
"""

logger = ...
def image_to_url(image, widget): # -> list[str] | None:
	...

def texture_to_json(texture, widget): # -> dict[Unknown, Unknown] | list[Unknown] | HasStream | <subclass of MediaStream and str> | list[str] | None:
	...

max_texture_width = ...
min_texture_width = ...
def cube_to_png(grid, vmin, vmax, file): # -> tuple[tuple[int, int], tuple[Unknown, Unknown], int, Unknown, Unknown]:
	...

def tile_volume(vol, tex_size, tile_shape, vol_size): # -> dict[str, memoryview | str | _Shape] | None:
	...

def volume_to_json_volume_tiled(vol, obj=...): # -> dict[str, list[dict[str, memoryview | str | _Shape] | None] | tuple[int, ...] | list[int]] | None:
	...

def rgba_to_png(rgba, file): # -> None:
	...

def rgba_to_json(rgba, obj=...): # -> dict[str, Unknown | str]:
	...

def cube_to_json(grid, obj=...): # -> dict[str, tuple[int, int] | tuple[Unknown, Unknown] | int | Unknown | str] | None:
	...

def cube_to_tiles(grid, obj=...): # -> dict[str, memoryview | tuple[int, int] | tuple[Unknown, Unknown] | int | Unknown] | None:
	...

def from_json(value, obj=...): # -> list[Unknown]:
	...

def array_to_json(ar, obj=...): # -> None:
	...

def array_to_binary(ar, obj=..., force_contiguous=...): # -> dict[str, memoryview | str | _Shape | Unknown] | None:
	...

def binary_to_array(value, obj=...):
	...

def array_sequence_to_binary_or_json(ar, obj=...): # -> list[dict[str, memoryview | str | _Shape | Unknown | Any] | None] | list[dict[str, memoryview | str | _Shape | Unknown] | None] | None:
	...

def array_to_binary_or_json(ar, obj=...): # -> list[dict[str, memoryview | str | _Shape | Unknown] | None] | None:
	...

def from_json_to_array(value, obj=...): # -> None:
	...

last_value_to_array = ...
def create_array_binary_serialization(attrname, update_from_js=...): # -> dict[str, ((ar: Unknown, obj: Unknown | None = None) -> (Unknown | list[dict[str, memoryview | str | _Shape | Unknown] | None] | None)) | ((value: Unknown, obj: Unknown | None = None) -> (ndarray[Unknown, Unknown] | Any))]:
	...

def create_array_cube_png_serialization(attrname, update_from_js=...): # -> dict[str, ((grid: Unknown, obj: Unknown | None = None) -> (dict[str, tuple[int, int] | tuple[Unknown, Unknown] | int | Unknown | str] | None)) | ((value: Unknown, obj: Unknown | None = None) -> (Any | list[Unknown]))]:
	...

def color_to_binary_or_json(ar, obj=...): # -> list[dict[str, memoryview | str | _Shape | Unknown | Any] | None] | list[dict[str, memoryview | str | _Shape | Unknown] | None] | None:
	...

def json_to_array(json, obj=...): # -> ndarray[Unknown, Unknown]:
	...

color_serialization = ...
array_sequence_serialization = ...
array_serialization = ...
array_volume_tiled_serialization = ...
array_cube_png_serialization = ...
array_rgba_png_serialization = ...
array_cube_tile_serialization = ...
image_serialization = ...
texture_serialization = ...
ndarray_serialization = ...
if __name__ == "__main__":
	grid = ...
